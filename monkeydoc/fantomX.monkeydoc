# Module fantomX

The module *fantomX* is a 2D game framework which supplies you with huge set of game object related functionalities.

To use fantomX in your game, simply add "Import fantomX" at the top of your program.

<h2>Introduction</h2>
<b>fantomX</b> is a 2D game framework (module) for <a href="http://www.monkey-x.com" target="_blank">Monkey X</a> that was created to give game developers more time to work on the actual game play than on setting up render routines, update process chains and stuff like that. It uses <b>mojo2</b> to render its content. If you need a mojo1 compatible framework, I suggest using <b>fantomEngine</b>, the first generation.

With <b>fantomX</b> you will write only fractions of the code you did before. 
<h2>Website, bug reports and forum support</h2>The most current version of <b>fantomX</b> is now hosted at <a href="http://www.fantomgl.com" target="_blank">www.fantomgl.com</a>. You can post issues/bug reports at the new <a href="http://forum.fantomgl.com" target="_blank">support forum</a>. 
The forum is also a good place to ask your questions about how to use <b>fantomX</b> or make suggestions about needed features.
<h2>Features</h2><b>fantomX</b> currently supports the following features: 
<ul><li>Various objects like images, tile maps, graphic primitives, sounds, collision zones, scenes and layers.
<li>Automatic processes to create, update and render objects.
<li>Callback methods which are called during the handling of an object, layer, timer and transitions.
<li>Layer transitions with callback methods.
<li>Extensive handling methods for the engine's objects.
<li>Object transitions for position, rotation, scaling and alpha values with callback methods.
<li>Several equation and ease types for object and layer transitions.
<li>Object timers with callback methods.
<li>Different collision methods for objects with callback methods.
<li>Touch input handling with callback methods.
<li>Organize your objects in layers.
<li>Automatic content scaling via providing a virtual canvas setup.
<li>Simple high-score list loading, saving and updating.
<li>Simple sound loading which handles the proper file extension depending on the chosen platform. 
<li>Support for bitmap font text objects which load <b>EzGUI</b> font descriptions.
<li>Build-in frames per second calculator.
<li>Simple camera/view support which you can move around to render parts of your scenery.
<li>Support for texture maps (atlas) created by the tool <b>TexturePacker</b>.
<li>Support for tile maps created by the tool <b>Tiled</b>.
<li>Embedded object informations inside a Tiled map will be imported and are accessable.
<li>Engine time scaling supporting object updates, timers and transitions.
<li>Automatic swipe gesture detection with event method.
<li>Path/Waypoint handling. Let your objects follow them.
<li>A* pathfinding und user definable grids of nodes. It doesn't have to be a grid of squares!
<li>Integration of Box2D powered physics including ray casting. Physics definition created by the tool <b>PhysicsEditor</b> are supported too.
<li>Localize your game easily with easy support of multiple languages.
<li>Support different key maps for different controllers or user definitions.
<li>Easy scene/room management.
<li>Objects can be composed of several single images.
<li>Automatic object pooling.
<li>Custom GUI elements.
<li>Support for 9-slice image scaling.</ul>
# Import brl.pool

# Import fantomX.cftAStar

# Import fantomX.cftBox2D

# Import fantomX.cftCollisions

# Import fantomX.cftEngine

# Import fantomX.cftFont

# Import fantomX.cftFunctions

# Import fantomX.cftGui

# Import fantomX.cftHighscore

# Import fantomX.cftImageMng

# Import fantomX.cftKeyMapping

# Import fantomX.cftLayer

# Import fantomX.cftLocalization

# Import fantomX.cftMisc

# Import fantomX.cftObjAnimMng

# Import fantomX.cftObject

# Import fantomX.cftRGBA

# Import fantomX.cftScene

# Import fantomX.cftSound

# Import fantomX.cftSpriteAtlas

# Import fantomX.cftSwipe

# Import fantomX.cftTileMap

# Import fantomX.cftTimer

# Import fantomX.cftTrans

# Import fantomX.cftVec2D

# Import fantomX.cftWaypoints

# Import fantomX.json

# Import fantomX.xml

# Import mojo2

# Import reflection

